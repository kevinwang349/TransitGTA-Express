<html>

<head>
    <meta charset="UTF-8">
    <title>System Maps</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
        integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
        crossorigin="">
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
        integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
        crossorigin=""></script>
</head>

<body class="">
    <br><br>

    <select id="mapname" onchange="init()">
        <option value="-">Choose a map from the menu</option>
        <option value="Leaflet_Map">Leaflet Map - all routes & stops</option>
        <% mapJSON.forEach(map => {%>
            <option value="<%= map.url%>"><%= map.name%></option>
        <%})%>
    </select>
    <br><br>
    <div id="outerbox">
    </div>

    <!--script>
        // Creates a leaflet map binded to an html <div> with id "map"
        var map = L.map('map');
        
        // Adds the basemap tiles to the map
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox/streets-v11',
            tileSize: 512,
            zoomOffset: -1,
            accessToken: 'pk.eyJ1Ijoia2V2aW53MjQwMSIsImEiOiJja3I1ODZqdWszMmdqMnBwYW9qbWVnY2c4In0.qqgVHQu94DuWbLbgjWMN9w'
        }).addTo(map);
    </script-->
    <script>
        // Splits a CSV string into a 2D array
        function strArray(string) {
            const array1 = string.split('\n');
            let array2 = [];
            for (const el of array1) {
                array2.push(el.split(','));
            }
            return array2;
        }
        // Decodes strings passed from Express server
        function parseHtmlEntities(str) {
            return str.replace(/&#([0-9]{1,3});/gi, function(match, numStr) {
                var num = parseInt(numStr, 10); // read num as normal number
                return String.fromCharCode(num);
            });
        }

        const agency=`<%= agency%>`;
        const routeShapesStr=`<%= routeshapes%>`;
        const shapes=strArray(routeShapesStr);
    </script>
    <script type="text/javascript" src="/map.js"></script>
</body>

</html>