<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include("../partials/head"); %>
        <title><%= title %></title>
    </head>
    <body>
        <img id="home" src="/logos/home.png" width="50px">
        <style>
            #home:hover{
                cursor:grab;
            }
        </style>
        
        <div style="width: 500px">
            <div style="height: 500px" id="map"></div>
        </div>
        <p style="font-size: 25px;"><%= title%></p>
        <% if(arrivalTimes.length==2){%><p style="font-size: 25px;">Final arrival at this stop:</p>
        <% }else if(arrivalTimes.length==1){%><p style="font-size: 25px;">There is no service at this stop today.</p>
        <% }else{%><p style="font-size: 25px;">Next <%= (arrivalTimes.length-1)%> arrivals at this stop:</p><%}%>

        <table>
            <% for(let i=1;i<arrivalTimes.length;i++){ %>
                <tr><td style="font-size: 20px; border-top: 1px solid black; border-left: 1px solid black; background-color: #<%= tintedColors[i]%>">
                    <% if(vehicleIDs[i].length>0){ %>Vehicle <%= vehicleIDs[i]%> on <%}%>
                    <%= stoproutes[i][stoproutes[0].indexOf('route_short_name')]%> <%= stoproutes[i][stoproutes[0].indexOf('route_long_name')]%>
                         towards <a href="./trip?t=<%= stoptrips[i][stoptrips[0].indexOf('trip_id')]%>"><%= stoptrips[i][stoptrips[0].indexOf('trip_headsign')]%></a>
                    <br>Scheduled arrival time: <%= arrivalTimes[i]%>
                    <% if(actualTimes[i]!=''){%><br>Predicted arrival time: <%= actualTimes[i]%><%}%>
                </td></tr>
            <% } %>
        </table>
        <br>
        <button onclick="scheduleRedirect()" style="font-size: 20px;">Stop schedule at this stop</button>

        <script>
            // Redirects
            document.getElementById('home').addEventListener('click',() => {
                window.location.href='https://transitGTA.onrender.com';
            });
            function scheduleRedirect(){
                window.location.href='https://transitGTA.onrender.com/<%= agency %>/stopschedule?s=<%= stopid%>';
            }

            // Creates a leaflet map binded to an html <div> with id "map"
            var map = L.map('map');
            
            // Adds the basemap tiles to the map
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox/streets-v11',
                tileSize: 512,
                zoomOffset: -1,
                accessToken: 'pk.eyJ1Ijoia2V2aW53MjQwMSIsImEiOiJja3I1ODZqdWszMmdqMnBwYW9qbWVnY2c4In0.qqgVHQu94DuWbLbgjWMN9w'
            }).addTo(map);
        </script>

        <% if(agency == 'TTC'){ %>
            <script>
                //
            </script>
            <!--script src="/nextbusTTC.js"></script-->
        <% } else { %>
            <script>
                // Splits a CSV string into a 2D array
                function strArray(string) {
                    const array1 = string.split('\n');
                    let array2 = [];
                    for (const el of array1) {
                        array2.push(el.split(','));
                    }
                    return array2;
                }
                // Decodes strings passed from Express server
                function parseHtmlEntities(str) {
                    return str.replace(/&#([0-9]{1,3});/gi, function(match, numStr) {
                        var num = parseInt(numStr, 10); // read num as normal number
                        return String.fromCharCode(num);
                    });
                }

                const currentStopStr=`<%= currentStop%>`;
                const currentStop = currentStopStr.split(',');
                const arrivalTimesStr=`<%= arrivalTimes%>`;
                const arrivalTimes = arrivalTimesStr.split(',');
                const actualTimesStr=`<%= actualTimes%>`;
                const actualTimes = actualTimesStr.split(',');
                const stoproutesStr=`<%= stoproutesStr%>`;
                const stoproutes = strArray(stoproutesStr);
                const stopsStr=`<%= stopsLegend%>`;
                const stops = stopsStr.split(',');
                const vehicleStr=`<%= vehicles%>`;
                const vehicles = JSON.parse(parseHtmlEntities(vehicleStr));
            </script>
            <script src="/nextbus.js"></script>
        <% } %>

        <br>
    </body>
</html>